name: golangci-lint
on:
  push:
    branches:
      - main
      - release-*.*.*
  pull_request:

permissions:
  contents: read

jobs:
  detect-changes:
    if: github.event_name == 'pull_request'
    name: Detect whether Go code changed
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      backend-changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 2
      - name: Detect changes
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: |
            .github/workflows/go-lint.yml
            **/go.mod
            **/go.sum
            **/go.work
            **/go.work.sum
            **.go
      - name: Print all changed files
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Changed files: $CHANGED_FILES"

  lint-go:
    needs:
      - detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - run: make gen-go
      - name: golangci-lint
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd
        with:
          version: v2.0.2
          args: |
            --verbose $(go list -m -f '{{.Dir}}' | xargs -I{} sh -c 'test ! -f {}/.nolint && echo {}/...')
          install-mode: binary
