name: Integration Tests

on:
  push:
    branches:
      - main
      - release-*.*.*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

permissions: { }

jobs:
  memcached:
    name: Memcached
    runs-on: ubuntu-latest-8-cores
    permissions:
      contents: read
    services:
      memcached:
        image: memcached:1.6.9-alpine
        ports:
          - 11211:11211
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests
        env:
          MEMCACHED_HOSTS: 127.0.0.1:11211
        run: |
          sudo apt-get update -yq && sudo apt-get install build-essential
          go clean -testcache
          go list -f '{{.Dir}}/...' -m  | xargs go test -run IntegrationMemcached -covermode=atomic -timeout=2m

  redis:
    name: Redis
    runs-on: ubuntu-latest-8-cores
    permissions:
      contents: read
    services:
      redis:
        image: redis:6.2.11-alpine
        ports:
          - 6379:6379
    steps:
      - name: Chekout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests
        env:
          REDIS_URL: redis://redis:6379/0
        run: |
          sudo apt-get update -yq  && sudo apt-get install build-essential
          go clean -testcache
          go list -f '{{.Dir}}/...' -m  | xargs go test -run IntegrationRedis -covermode=atomic -timeout=2m

  test:
    name: testing gh services
    runs-on: ubuntu-latest-8-cores
    services:
      nginx:
        image: nginx
        # Map port 8080 on the Docker host to port 80 on the nginx container
        ports:
          - 8080:80
      redis:
        image: redis
        # Map random free TCP port on Docker host to port 6379 on redis container
        ports:
          - 6379/tcp
    steps:
      - run: |
          echo "Redis available on 127.0.0.1:${{ job.services.redis.ports['6379'] }}"
          echo "Nginx available on 127.0.0.1:${{ job.services.nginx.ports['80'] }}"
          curl 127.0.0.1
          curl 127.0.0.1:8080
