// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: secret.proto

package access

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	SecretDecoder_GetSecretValues_FullMethodName = "/access.SecretDecoder/GetSecretValues"
)

// SecretDecoderClient is the client API for SecretDecoder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SecretDecoderClient interface {
	// Upload a blob that will be saved in a resource
	GetSecretValues(ctx context.Context, in *SecretRequest, opts ...grpc.CallOption) (*SecretResponse, error)
}

type secretDecoderClient struct {
	cc grpc.ClientConnInterface
}

func NewSecretDecoderClient(cc grpc.ClientConnInterface) SecretDecoderClient {
	return &secretDecoderClient{cc}
}

func (c *secretDecoderClient) GetSecretValues(ctx context.Context, in *SecretRequest, opts ...grpc.CallOption) (*SecretResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SecretResponse)
	err := c.cc.Invoke(ctx, SecretDecoder_GetSecretValues_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecretDecoderServer is the server API for SecretDecoder service.
// All implementations should embed UnimplementedSecretDecoderServer
// for forward compatibility
type SecretDecoderServer interface {
	// Upload a blob that will be saved in a resource
	GetSecretValues(context.Context, *SecretRequest) (*SecretResponse, error)
}

// UnimplementedSecretDecoderServer should be embedded to have forward compatible implementations.
type UnimplementedSecretDecoderServer struct {
}

func (UnimplementedSecretDecoderServer) GetSecretValues(context.Context, *SecretRequest) (*SecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSecretValues not implemented")
}

// UnsafeSecretDecoderServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SecretDecoderServer will
// result in compilation errors.
type UnsafeSecretDecoderServer interface {
	mustEmbedUnimplementedSecretDecoderServer()
}

func RegisterSecretDecoderServer(s grpc.ServiceRegistrar, srv SecretDecoderServer) {
	s.RegisterService(&SecretDecoder_ServiceDesc, srv)
}

func _SecretDecoder_GetSecretValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretDecoderServer).GetSecretValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretDecoder_GetSecretValues_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretDecoderServer).GetSecretValues(ctx, req.(*SecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SecretDecoder_ServiceDesc is the grpc.ServiceDesc for SecretDecoder service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SecretDecoder_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "access.SecretDecoder",
	HandlerType: (*SecretDecoderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSecretValues",
			Handler:    _SecretDecoder_GetSecretValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "secret.proto",
}
