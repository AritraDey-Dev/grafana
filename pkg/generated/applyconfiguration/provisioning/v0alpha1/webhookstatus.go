// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// WebhookStatusApplyConfiguration represents a declarative configuration of the WebhookStatus type for use
// with apply.
type WebhookStatusApplyConfiguration struct {
	URL      *string `json:"url,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Received *int64  `json:"received,omitempty"`
}

// WebhookStatusApplyConfiguration constructs a declarative configuration of the WebhookStatus type for use with
// apply.
func WebhookStatus() *WebhookStatusApplyConfiguration {
	return &WebhookStatusApplyConfiguration{}
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *WebhookStatusApplyConfiguration) WithURL(value string) *WebhookStatusApplyConfiguration {
	b.URL = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *WebhookStatusApplyConfiguration) WithSecret(value string) *WebhookStatusApplyConfiguration {
	b.Secret = &value
	return b
}

// WithReceived sets the Received field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Received field is set to the value of the last call.
func (b *WebhookStatusApplyConfiguration) WithReceived(value int64) *WebhookStatusApplyConfiguration {
	b.Received = &value
	return b
}
